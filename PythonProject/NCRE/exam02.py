# -*- coding: UTF-8 -*-
"""
@Project ：Python 
@File    ：exam02.py
@IDE     ：PyCharm 
@Author  ：Ning
@Date    ：2023/9/21 16:19 
"""
'''
例21：将程序定义好的std列表里的姓名和成绩与已经定义好的模板拼成一段话，显示在屏幕上。
例:亲爱的张三,你的考试成绩是英语90,数学87, Python语言95,总成绩272.特此通知…
'''
# // 考生文件初始代码
# std = [['张三',90,87,95],['李四',83,80,87],['王五',73,57,55]]
# modl = "亲爱的{}, 你的考试成绩是: 英语{}, 数学{}, Python语言{}, 总成绩{}.特此通知."
#
# for st in std:
#    cnt = ____________
#    for i in range(____________):
#        cnt += ____________
#    print(modl.format(st[0],st[1],st[2],st[3],cnt))
#
# // 参考答案
# std = [['张三',90,87,95],['李四',83,80,87],['王五',73,57,55]]
# modl = "亲爱的{}, 你的考试成绩是: 英语{}, 数学{}, Python语言{}, 总成绩{}.特此通知."
#
# for st in std:
#    cnt = 0
#    for i in range(1,4):
#        cnt += st[i]
#    print(modl.format(st[0],st[1],st[2],st[3],cnt))

'''
例22：键盘输入正整数n，按要求把n输出到屏幕，格式要求:宽度为14个字符，数字中间对齐，不足部分用=填充。
例如:键盘输入正整数n为1234，屏幕输出===== 1234 =====
'''
# // 考生文件初始代码
# n = eval(input("请输入正整数:"))
# print("{______}".format(n))
#
# // 参考答案
# n = eval(input("请输入正整数:"))
# print("{:=^14}".format(n))

'''
例23：a和b是两个列表变量，列表a为[3,6,9]已给定，键盘输入列表b，将a列表的三个元素插入到b列表中对应的前三个元素的后面，并显示输出在屏幕上。
例如:键盘输入列表b为[1,2,3]，因此，屏幕输出计算结果为[1,3,2,6,3,9]
'''
# // 考生文件初始代码
# a = [3,6,9]
# b = eval(input()) #例如：[1,2,3]
# j=1
# for i in range(len(__(1)____)):
#    b._____(2)_____
#    j+= __(3)______
# print(b)

# // 参考答案
# a = [3,6,9]
# b = eval(input()) #例如：[1,2,3]
# j=1
# for i in range(len(a)):
#    b.insert(j,a[i])
#    j+= 2
# print(b)

'''
例24：以100为随机数种子，随机生成3个在1(含)到9(含)之间的随机整数，计算这三个随机整数的立方和。
'''
# // 考生文件初始代码
# import random
# ____________  # 此处可多行
# s = 0  #
# ____________  # 此处可多行
# print(s)
#
# // 参考答案
# import random
# random.seed(100)  # 此处可多行
# s = 0  #
# for i in range(3):
#    n = random.randint(1,9)  #此处可多行
#    s += n**3
# print(s)

'''
例25（简单应用题一）：使用turtle库的turtle.fd()函数和turtle.seth()函数绘制一个边长为100的三角形，效果如下图所示。
'''
# // 考生文件初始代码
# import turtle
# for i in range(_____):
#    turtle.seth(_____)
#    ________(100)
#
# // 参考答案
# import turtle
# for i in range(3):
#    turtle.seth(i*120)
#    turtle.fd(100)

'''
例26（简单应用题二）：键盘输入一组水果名称并以空格分隔，共—行。示例格式如下:
        苹果 芒果 草莓 芒果 苹果 草莓 芒果 香蕉 芒果 草莓
        统计各类型的数量，从数量多到少的顺序输出类型及对应数量，以英文冒号分隔，每个类型一行。
        输出结果保存在考生文件夹下，命名为“PY202.txt”。输出参考格式如下:
芒果：4
草莓：3
苹果：2
香蕉：1
'''
# // 考生文件初始代码
# fo = open("PY202.txt","w")
# txt = input("请输入类型序列: ")
# ...
# d = {}
# ....
# ls = list(d.items())
# ls.sort(key=lambda x:x[1], reverse=True)  # 按照数量排序
# for k in ls:
#   fo.write("{}:{}\n".format(k[0], k[1]))
# fo.close()

# // 参考答案
# encoding：手动设定所使用的编码格式，不同平台的 ecoding 参数值也不同，以 Windows 为例，其默认为 cp936（实际上就是 GBK 编码）
# 输入多个空格会被统计
# 苹果 芒果 草莓 芒果 苹果 草莓 芒果 香蕉 芒果 草莓
# 苹果  芒果  草莓  芒果  苹果  草莓  芒果  香蕉  芒果  草莓
# fo = open("PY202.txt", "w", encoding='UTF-8')
# txt = input("请输入类型序列: ")
# fruits = txt.split(" ")
# d = {}
# for fruit in fruits:
#    d[fruit] = d.get(fruit, 0) + 1
# print(d)
# ls = list(d.items())
# print(ls)
# ls.sort(key=lambda x: x[1], reverse=True)  # 按照数量排序,
# for k in ls:
#     fo.write("{}:{}\n".format(k[0], k[1]))
# fo.close()

'''
例27（综合应用题）：给出文件"论语.txt"，其内容采用逐句“原文"与逐句“注释"相结合，通过【原文】标记《论语》原文内容，
通过【注释】标记《论语》注释内容，具体文件格式参考“论语.txt"文件(该题原本有输出示例文件，此处不给出，可直接参看代码)。
       问题1(10分）：在PY301-1.py文件中修改代码，提取“论语.txt"文件中的原文内容，输出保存到考生文件夹下，文件名为“论语-原文.txt”。
       要求:仅保留“论语.txt"文件中所有【原文】标签下面的内容，不保留标签，并去掉每行行首空格及行尾空格，无空行。
       原文小括号及内部数字是源文件中注释项的标记，请保留。
       问题2(10分)：在PY301-2.py文件中修改代码，对“论语-原文.txt′或“论语.txt"文件进一步提纯，去掉每行文字中所有小括号及内部数字，
       保存为“论语-提纯原文.txt"文件。

"论语.txt"文件部分示例如下：
【原文】
子曰(1)：“学(2)而时习(3)之，不亦说(4)乎？有朋(5)自远方来，不亦乐(6)乎？人不知(7)，而不愠(8)，不亦君子(9)乎？”

【注释】
(1)子：中国古代对于有地位、有学问的男子的尊称，有时也泛称男子。《论语》书中“子曰”的子，都是指孔子而言。
(2)学：孔子在这里所讲的“学”，主要是指学习西周的礼、乐、诗、书等传统文化典籍。
(3)时习：在周秦时代，“时”字用作副词，意为“在一定的时候”或者“在适当的时候”。但朱熹在《论语集注》一书中把“时”解释为“时常”。“习”，指演习礼、乐；复习诗、书。也含有温习、实习、练习的意思。
(4)说：音ｙｕè，同悦，愉快、高兴的意思。
(5)有朋：一本作“友朋”。旧注说，“同门曰朋”，即同在一位老师门下学习的叫朋，也就是志同道合的人。
(6)乐：与说有所区别。旧注说，悦在内心，乐则见于外。
(7)人不知：此句不完整，没有说出人不知道什么。缺少宾语。一般而言，知，是了解的意思。人不知，是说别人不了解自己。
(8)愠：音ｙùｎ，恼怒，怨恨。
(9)君子：《论语》书中的君子，有时指有德者，有时指有位者。此处指孔子理想中具有高尚人格的人。
'''
# // 考生文件初始代码 PY301-1
# fi = open("论语.txt", ______)
# fo = open("论语-原文.txt", ______)
# ...
# for line in fi:
# ...
#    fo.write(line.lstrip())
# ...
# # // 考生文件初始代码 PY301-2
# fi = open("论语-原文.txt", ______)
# fo = open("论语-提纯原文.txt", ______)
# for line in fi:
# ...
#    line=line.replace(______)
# ...

# // 参考答案PY301-1
# fi = open("论语.txt", "r", encoding="utf-8")
# fo = open("论语-原文.txt", "w", encoding="utf-8")
# flag = False
# for line in fi:
#    if "【" in line:
#        flag = False
#    if "【原文】" in line:
#        flag = True
#        continue
#    if flag == True:
#        fo.write(line.lstrip())
# fi.close()
# fo.close()
# # // 参考答案PY301-2
# fi = open("论语-原文.txt", 'r', encoding="utf-8")
# fo = open("论语-提纯原文.txt", 'w', encoding="utf-8")
# for line in fi:
#    for i in range(1, 10):
#         line = line.replace("({})".format(i), "")
#    fo.write(line)
# fi.close()
# fo.close()







