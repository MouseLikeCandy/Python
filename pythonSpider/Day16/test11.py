# -*- coding: utf-8 -*-
"""
@Time ： 2023/6/20 23:01
@Auth ： 异世の阿银
@File ：test11.py
@IDE ：PyCharm
@Motto：ABC(Always Be Coding)
"""
import time

'''
# 思考: 能否在同一个python应用程序中执行两个以上的无限循环呢?

# 说明: 我们到目前为止, 所有编写的程序都只有'单条执行路径'.这个路径就是'主路径'.

# 要解决的是同时进行的问题

多线程:
可以充分利用CPU资源
更容易解决实际中的问题
广泛应用于和网络有关的程序设计中. 聊天

并发: 一段时间内, 多个线程同时运行.(CPU的高速切换, 速度非常快, 感觉不到卡顿)
每一个独立的程序, 我们都称之为一个'进程' process
一个一个的进程其实就是一个个的应用程序.
进程执行时可以创建'线程' thread
线程其实是进程中的独立执行路径. 如果一个进程里面有多个线程, 则CPU会在各个线程之间切换.

思考: 线程事越多越好吗?
不是, 可能会浪费资源, 根据程序要执行的任务而定. 
对于CPU而言, 同一时刻, 只能执行一个任务. 同一时间段内, 如果线程过多, 每个线程被切到的时间就变少了. 因此线程并不是越多越好.
1. 多线程要解决生活中实际的需求问题: 上传/下载/聊天
2. 可以充分利用 CPU资源. 线程的中断与恢复可以更加节省系统的开销.
'''

if __name__ == '__main__':
    # 思考: 生活中, 同一个程序是可以同时下载多部电影的
    # 耗时操作, 5秒
    while True:
        for i in range(5):
            print('下载 <跨过鸭绿江> 电影 (假设下载需要3天)')
            time.sleep(1)
        break

    # 上一部电影下载未完成, 不会下载下一部电影
    # 耗时操作
    while True:
        for i in range(8):
            print('下载 <我们结婚吧> 电影')
            time.sleep(1)
        break

    print('程序继续向下执行...')